{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://task-product-shop/./js/utilities/utils.js","webpack://task-product-shop/./js/classes/Validation.js","webpack://task-product-shop/./js/utilities/render.js","webpack://task-product-shop/./js/classes/Product.js","webpack://task-product-shop/./js/classes/Cart.js","webpack://task-product-shop/./js/classes/Order.js","webpack://task-product-shop/./js/classes/User.js","webpack://task-product-shop/./js/classes/Admin.js","webpack://task-product-shop/./js/script.js"],"sourcesContent":["const getS = selector => document.querySelector(selector);\r\n\r\nconst wrapErrors = (func) => {\r\n    if (!func.__wrapped__) {\r\n        func.__wrapped__ = function () {\r\n            try {\r\n                return func.apply(this, arguments);\r\n            } catch (err) {\r\n                getS('.error-modal__explanation').textContent = err.message;\r\n                openModal('.error-modal')\r\n            }\r\n        };\r\n    }\r\n\r\n    return func.__wrapped__;\r\n}\r\n\r\nconst inputValidation = wrapErrors((condition, element) => {\r\n    if (!condition) {\r\n        element.style.border = '2px solid red';\r\n    } else {\r\n        element.style.border = 'none';\r\n    }\r\n    return condition\r\n});\r\n\r\nconst closeModal = (modalSelector) => {\r\n    const modal = getS(modalSelector);\r\n    modal.style.display = 'none';\r\n    document.body.style.overflow = '';\r\n    modal.querySelectorAll('input').forEach((input) => input.value = '');\r\n};\r\n\r\nconst openModal = (modalSelector) => {\r\n    const modal = getS(modalSelector);\r\n    modal.style.display = 'flex';\r\n    document.body.style.overflow = 'hidden';\r\n}\r\n\r\nconst modalWindow = (selector) => {\r\n    const modal = getS(selector);\r\n    modal.addEventListener('click', (e) => {\r\n        if (e.target === modal || e.target.getAttribute('data-close') == \"\") {\r\n            closeModal(selector);\r\n        }\r\n    });\r\n\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === \"Escape\" && modal.style.display == 'flex') {\r\n            closeModal(selector);\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport { getS, wrapErrors, inputValidation, closeModal, openModal, modalWindow};","import { wrapErrors } from \"../utilities/utils\";\r\n\r\nclass Validation {\r\n    static isNumber = wrapErrors((number, comparator) => {\r\n        if (typeof number === 'number' && !isNaN(number)) {\r\n            if (number > comparator) return number\r\n            else {\r\n                throw new RangeError(`Number ${number} must be greater than ${comparator}`)\r\n            }\r\n        } else {\r\n            throw new TypeError('Element must be a number.');\r\n        }\r\n    });\r\n    static isDate = wrapErrors((date) => {\r\n        if (date => new Date() && date instanceof Date && !isNaN(date.valueOf())) {\r\n            return date\r\n        } else throw new Error('Invalid Date value');\r\n    })\r\n    static isArray = wrapErrors((array) => {\r\n        if (Array.isArray(array)) {\r\n            return array\r\n        } else throw new Error('Invalid Array');\r\n    })\r\n    static isName = (name) => {\r\n        return /^[a-яА-яa-zA-ZіІЇїЄєґҐ ]{2,20}$/.test(name)\r\n    }\r\n}\r\n\r\nexport { Validation };","import { getS, openModal, inputValidation } from './utils';\r\nimport { Validation } from '../classes/Validation';\r\n\r\nconst renderTotalPrice = (user, selector) => {\r\n    const currentTotalPrice = user.cart.storage.reduce((sum, {\r\n        product,\r\n        amount\r\n    }) => sum + amount * product.price, 0);\r\n    getS(selector).textContent = `${currentTotalPrice} UAH`;\r\n}\r\n\r\nconst renderUserInfo = (user, role) => {\r\n    getS('.user-info__role').textContent = role;\r\n    getS('.user-info__name span').textContent = user.name;\r\n    getS('.user-info__balance span').textContent = `${user.balance} UAH`;\r\n}\r\n\r\nconst renderProducts = (user, products) => {\r\n    const productsList = getS('.products .prod-container__list');\r\n    productsList.innerHTML = '';\r\n    products.forEach(product => {\r\n        const li = document.createElement('li');\r\n        li.textContent = `${product.name} - ${product.price} UAH - ${product.totalAmount}`;\r\n        li.onclick = () => {\r\n            openModal('.cart-modal');\r\n            getS('.cart-modal__product').textContent = product.name;\r\n            getS('.cart-modal__btn').onclick = () => {\r\n                const amount = getS('.cart-modal__amount');\r\n                if (inputValidation(Validation.isNumber(+amount.value, 0), amount)) {\r\n                    user.cart.addProduct(product, +amount.value);\r\n                    getS('.cart-modal').style.display = 'none';\r\n                    amount.value = 0;\r\n                    renderCart(user);\r\n                }\r\n            };\r\n        };\r\n        productsList.append(li);\r\n    });\r\n}\r\n\r\nconst renderCart = (user) => {\r\n    const cartList = getS('.cart  .prod-container__list');\r\n    cartList.innerHTML = '';\r\n    user.cart.storage.forEach(({\r\n        product,\r\n        amount\r\n    }) => {\r\n        const li = document.createElement('li');\r\n        li.innerHTML = `${product.name} - ${amount}<span class=\"cross\">X</span>`\r\n        cartList.append(li);\r\n        li.querySelector('.cart .cross').onclick = (e) => {\r\n            const productName = e.target.parentNode.textContent.split(' - ')[0];\r\n            user.cart.removeProduct(productName);\r\n            renderCart(user);\r\n        };\r\n    });\r\n\r\n    renderTotalPrice(user, '.cart__total-price span');\r\n}\r\n\r\nexport {renderTotalPrice, renderUserInfo, renderProducts, renderCart}","import { Validation } from './Validation';\r\nclass Product {\r\n    constructor(name, price, totalAmount) {\r\n        this.name = name;\r\n        this.price = price;\r\n        this.totalAmount = totalAmount;\r\n    }\r\n    substractAmount(amount) {\r\n        if (amount <= this.totalAmount) {\r\n            this.totalAmount -= amount;\r\n        } else throw new Error('Insufficient quantity of goods.');\r\n    }\r\n    get name() {\r\n        return this._name;\r\n    }\r\n    set name(name) {\r\n        this._name = name;\r\n    }\r\n    get price() {\r\n        return this._price;\r\n    }\r\n    set price(price) {\r\n        this._price = Validation.isNumber(price, 0);\r\n    }\r\n    get totalAmount() {\r\n        return this._totalAmount;\r\n    }\r\n    set totalAmount(totalAmount) {\r\n        this._totalAmount = Validation.isNumber(totalAmount, -0.001);\r\n    }\r\n}\r\nexport { Product };","import { Validation } from './Validation';\r\nimport { Product } from './Product';\r\nclass Cart {\r\n    constructor(user) {\r\n        this._user = user;\r\n        this._cartStorage = [];\r\n    }\r\n    get storage() {\r\n        return this._cartStorage;\r\n    }\r\n    addProduct(product, amount) {\r\n        if (Validation.isNumber(amount, 0) && product instanceof Product) {\r\n            const existingProduct = this._cartStorage.findIndex((element, index, array) => element.product == product)\r\n            if (existingProduct != -1) this._cartStorage[existingProduct].amount += amount;\r\n            else this._cartStorage.push({\r\n                product,\r\n                amount\r\n            });\r\n        } else throw new Error('Invalid product value.')\r\n    }\r\n    removeProduct(prodName) {\r\n        if (this._cartStorage.length != 0 && prodName) {\r\n            this._cartStorage = this._cartStorage.filter(data => data.product.name != prodName);\r\n        }\r\n    }\r\n    withdraw() {\r\n        this._cartStorage.length = 0;\r\n    }\r\n    checkout() {\r\n        if (this._cartStorage.length == 0) throw new Error('Cart is empty.');\r\n        const totalPrice = this._cartStorage.reduce((sum, {\r\n            product,\r\n            amount\r\n        }) => sum + amount * product.price, 0);\r\n        this._user.addOrder(this._cartStorage, totalPrice, new Date());\r\n    }\r\n}\r\nexport { Cart };","import { Validation } from './Validation';\r\nclass Order {\r\n    constructor(products, totalPrice, date) {\r\n        this.products = products;\r\n        this.totalPrice = totalPrice;\r\n        this.date = date;\r\n    }\r\n    get products() {\r\n        return this._products;\r\n    }\r\n    set products(products) {\r\n        this._products = Validation.isArray(products);\r\n    }\r\n    get totalPrice() {\r\n        return this._totalPrice;\r\n    }\r\n    set totalPrice(totalPrice) {\r\n        this._totalPrice = Validation.isNumber(totalPrice, 0);\r\n    }\r\n    get date() {\r\n        return this._date;\r\n    }\r\n    set date(date) {\r\n        this._date = Validation.isDate(date);\r\n    }\r\n}\r\nexport { Order };","import { Validation } from './Validation';\r\nimport { Cart } from './Cart';\r\nimport { Order } from './Order';\r\n\r\nclass User {\r\n    constructor(name, balance) {\r\n        this._orderHistory = [];\r\n        this._cart = new Cart(this);\r\n        this.name = name;\r\n        this.balance = balance;\r\n    }\r\n\r\n    showOrderHistory(sortingField, sortingType = 'asc') {\r\n        let sortedHistory = this._orderHistory.sort((a, b) => {\r\n            if (sortingField == 'date') {\r\n                return a.date - b.date;\r\n            } else if (sortingField == 'price') {\r\n                return a.totalPrice - b.totalPrice;\r\n            }\r\n        });\r\n        if (sortingType == 'desc') sortedHistory = sortedHistory.reverse();\r\n        return sortedHistory;\r\n    }\r\n    get cart() {\r\n        return this._cart;\r\n    }\r\n    addOrder(products, totalPrice, date) {\r\n        console.log(totalPrice, this.balance);\r\n        if (totalPrice <= this.balance) {\r\n            this.balance -= totalPrice;\r\n        } else throw new Error('Insufficient funds in the account.');\r\n        products.map(({\r\n            product,\r\n            amount\r\n        }) => product.substractAmount(amount));\r\n        this.cart._cartStorage = [];\r\n        this._orderHistory.push(new Order(products, totalPrice, date));\r\n    }\r\n    get name() {\r\n        return this._name;\r\n    }\r\n    set name(name) {\r\n        if (Validation.isName(name)) this._name = name;\r\n        else throw new Error('Name must contain letters and spaces only.')\r\n    }\r\n    get balance() {\r\n        return this._balance;\r\n    }\r\n    set balance(balance) {\r\n        this._balance = Validation.isNumber(balance, -0.001);\r\n    }\r\n}\r\n\r\nexport { User };","import {User} from './User'\r\nclass Admin extends User {\r\n    createProduct(name, price, totalAmount) {\r\n        new Product(name, price, totalAmount);\r\n        // ....\r\n    }\r\n}\r\nexport { Admin };","\r\nimport {getS, wrapErrors, inputValidation, closeModal, openModal, modalWindow } from './utilities/utils';\r\nimport { Validation } from './classes/Validation';\r\nimport { renderUserInfo, renderProducts, renderCart } from './utilities/render';\r\nimport { User } from './classes/User';\r\nimport { Admin } from './classes/Admin';\r\nimport { Product } from './classes/Product';\r\n\r\n\r\n\r\ntry {\r\n    \r\n    let user, role,  productsDB = [\r\n            new Product('Coca Cola', 12.5, 500),\r\n            new Product('Coca Cola Zero', 12.5, 400),\r\n            new Product(\"Sprite\", 11.5, 750),\r\n            new Product('Medoff 0.5', 110, 50),\r\n            new Product('Globyno', 22.5, 100),\r\n            new Product('Parlament Aqua Blue', 69.5, 1000),\r\n            new Product('LM Loft Blue', 65, 99),\r\n            new Product('Winston XStyle Blue', 66, 204),\r\n            new Product('Winston XStyle Grey', 66, 300)\r\n        ];\r\n\r\n\r\n    getS('.checkout').onclick = wrapErrors(() => {\r\n        user.cart.checkout();\r\n        renderCart(user);\r\n        renderProducts(user,productsDB);\r\n        renderUserInfo(user,role);\r\n    });\r\n\r\n    getS('.withdraw').onclick = wrapErrors(() => {\r\n        user.cart.withdraw();\r\n        renderCart(user);\r\n    });\r\n\r\n    getS('.role').addEventListener('click', wrapErrors((e) => {\r\n        if (e.target.value) {\r\n            role = e.target.value;\r\n            closeModal('.role');\r\n            openModal('.sign-in');\r\n        }\r\n    }));\r\n\r\n    getS('.sign-in').addEventListener('submit', wrapErrors((event) => {\r\n        event.preventDefault();\r\n        const form = new FormData(event.target),\r\n            formData = Object.fromEntries(form.entries()),\r\n            nameCheck = inputValidation(Validation.isName(formData.userName), event.target.userName),\r\n            balanceCheck = inputValidation(Validation.isNumber(+formData.userBalance, 0), event.target.userBalance)\r\n        if (nameCheck && balanceCheck) {\r\n            if (role === 'Admin') {\r\n                user = new Admin(formData.userName, +formData.userBalance);\r\n                getS('.user-info__add-product').style.display = 'block';\r\n            } else {\r\n                user = new User(formData.userName, +formData.userBalance);\r\n            }\r\n            closeModal('.sign-in');\r\n            document.querySelectorAll('.prod-container').forEach(elem => elem.style.display = 'flex');\r\n            renderProducts(user,productsDB);\r\n            renderUserInfo(user, role);\r\n        }\r\n    }));\r\n\r\n\r\n    getS('.new-product-modal__btn').onclick = wrapErrors(() => {\r\n        const prodName = getS('.new-product-modal__name'),\r\n            prodPrice = getS('.new-product-modal__price'),\r\n            prodAmount = getS('.new-product-modal__amount'),\r\n            priceCheck = inputValidation(Validation.isNumber(+prodAmount.value, 0), prodAmount),\r\n            amountCheck = inputValidation(Validation.isNumber(+prodPrice.value, 0), prodPrice);\r\n        if (priceCheck && amountCheck) {\r\n            const newProduct = new Product(prodName.value, +prodPrice.value, +prodAmount.value);\r\n            productsDB.push(newProduct);\r\n            renderProducts(user,productsDB);\r\n            closeModal('.new-product-modal');\r\n        }\r\n    });\r\n\r\n    getS('.user-info__btn').onclick = wrapErrors(() => {\r\n        const sortingField = getS('.sorting-field').value;\r\n        const sortingType = getS('.sorting-type').value;\r\n        console.log(user.showOrderHistory(sortingField, sortingType));\r\n        alert('Check the console!') //  Вивів в консоль, бо не міг придумати вигляду для реально зручної, легкої модалки \r\n    });\r\n\r\n    getS('.user-info__add-product').onclick = wrapErrors(() => {\r\n        openModal('.new-product-modal');\r\n    });\r\n\r\n    modalWindow('.cart-modal');\r\n    modalWindow('.error-modal');\r\n    modalWindow('.new-product-modal');\r\n\r\n} catch (err) {\r\n    getS('.error-modal__explanation').textContent = err.message;\r\n    openModal('.error-modal');\r\n}\r\n"],"names":["getS","selector","document","querySelector","wrapErrors","func","__wrapped__","apply","this","arguments","err","textContent","message","openModal","inputValidation","condition","element","style","border","closeModal","modalSelector","modal","display","body","overflow","querySelectorAll","forEach","input","value","modalWindow","addEventListener","e","target","getAttribute","code","Validation","number","comparator","isNaN","TypeError","RangeError","date","Date","valueOf","Error","array","Array","isArray","name","test","renderUserInfo","user","role","balance","renderProducts","products","productsList","innerHTML","product","li","createElement","price","totalAmount","onclick","amount","isNumber","cart","addProduct","renderCart","append","cartList","storage","productName","parentNode","split","removeProduct","currentTotalPrice","reduce","sum","renderTotalPrice","constructor","substractAmount","_name","_price","_totalAmount","Cart","_user","_cartStorage","existingProduct","findIndex","index","push","prodName","length","filter","data","withdraw","checkout","totalPrice","addOrder","Order","_products","_totalPrice","_date","isDate","User","_orderHistory","_cart","showOrderHistory","sortingField","sortingType","sortedHistory","sort","a","b","reverse","console","log","map","isName","_balance","Admin","createProduct","Product","productsDB","event","preventDefault","form","FormData","formData","Object","fromEntries","entries","nameCheck","userName","balanceCheck","userBalance","elem","prodPrice","prodAmount","priceCheck","amountCheck","newProduct","alert"],"sourceRoot":""}